---
import fs from 'node:fs'
import { join as pathJoin } from 'path'

import * as matter from 'gray-matter'
// @ts-ignore
import { Card } from 'accessible-astro-components'

import type { Posts } from '@interfaces/index'

const articleDir = pathJoin(process.cwd(), 'src/content')

const latestArticleDir =
  fs
    .readdirSync(articleDir)
    .filter((item) => fs.lstatSync(pathJoin(articleDir, item)).isDirectory())
    .reverse()?.[0] || ''

const latestItems: Array<Posts> = fs
  .readdirSync(pathJoin(articleDir, latestArticleDir))
  .map((item) => matter.default(fs.readFileSync(pathJoin(articleDir, latestArticleDir, item))))
  .map(
    (item): Posts => ({
      title: item.data.title,
      slug: `/blog/${latestArticleDir}/${item.data.slug}`,
      description: item.data.description,
      cover: item.data.cover,
      date: new Date(item.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
    })
  )
  .slice(0, 3)
---

<div>
  <section class="mb-8 mt-12">
    <div class="space-content container">
      <h2 class="text-4 xl mb-4">Latest Articles</h2>
    </div>
  </section>
  <section class="mb-12">
    <div class="container">
      <ul class="my-3">
        {
          latestItems.map((post: Posts) => (
            <li>
              <Card title={post.title} url={post.slug} img={post.cover} footer={post.date}>
                {post.description.substring(0, 100)}...
              </Card>
            </li>
          ))
        }
      </ul>
    </div>
  </section>
</div>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
