---
import fs from 'node:fs'
import { fileURLToPath } from 'url'
import { dirname, join as pathJoin } from 'path'

import * as matter from 'gray-matter'
// @ts-ignore
import { Card, Pagination } from 'accessible-astro-components'

import type { Posts, AstroGetStaticPathsParams } from '@interfaces/index'
import DefaultLayout from '@layouts/DefaultLayout.astro'

export async function getStaticPaths({ paginate }: AstroGetStaticPathsParams) {
  const __dirname = dirname(fileURLToPath(import.meta.url))

  const articleDir = pathJoin(__dirname, '../../../articles')

  const yearCategories = fs
    .readdirSync(pathJoin(articleDir))
    .map((item) => ({ year: item, url: `/blog/${item}` }))
    .reverse()

  const staticPaths = yearCategories
    .filter((category) => {
      const postFiles = fs
        .readdirSync(pathJoin(articleDir, category.year))
        .filter((file) => file.split('.')[1] === 'mdx')
      if (postFiles.length) return true
    })
    .map((category) => {
      const postFiles = fs
        .readdirSync(pathJoin(articleDir, category.year))
        .filter((file) => file.split('.')[1] === 'mdx')
      const posts = postFiles.map(
        (postFilename) => matter.default(fs.readFileSync(pathJoin(articleDir, category.year, postFilename))).data
      )
      return paginate?.(posts, { params: { year: category.year }, pageSize: 6 })
    })

  return staticPaths
}

const { page } = Astro.props
const { year } = Astro.params
---

<DefaultLayout
  title="Blog"
  description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>{year}</h1>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3">
        {
          page.data.map((post: Posts) => (
            <li>
              <Card url={post.url} title={post.title}>
                {post.description.slice(0, 100)}...
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? `/blog/${year}` : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${year}/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
